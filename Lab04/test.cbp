/*
* A simple ASCII Draw program
*==@luke==
* E/15/142
*/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#define RESET		0
#define BRIGHT 		1

#define BLACK 		0
#define RED		1
#define GREEN		2
#define YELLOW		3
#define BLUE		4
#define MAGENTA		5
#define CYAN		6
#define	WHITE		7

void textcolor(int attr, int fg, int bg);
int checkInput(char input[]);
int checkType(char input[]);
void checker(char c1[],char c2[]);
void donut(char c1[],char c2[],int input);
void drawDonut(int array[]);

//Method checkType() returns 1 if the input type is correct o.w 0
int checkType(char input[]){
	if(strcmp(input,"checker") == 0){
		return 1;
	}else if(strcmp(input,"donut") == 0){
		return 2;
	}else{
		printf("Requested figure is not available\n");
		return 100;
	}
}

//Method checkInput() returns 1 if the input is correct o.w 0
int checkInput(char input[]){
	int i;
	for(i = 0;i <= 8;i++){
		if(strcmp(input,"black") == 0){
			return 0;
		}else if(strcmp(input,"red") == 0){
			return 1;
		}else if(strcmp(input,"green") == 0){
			return 2;
		}else if(strcmp(input,"yellow") == 0){
			return 3;
		}else if(strcmp(input,"blue") == 0){
			return 4;
		}else if(strcmp(input,"magenta") == 0){
			return 5;
		}else if(strcmp(input,"cyan") == 0){
			return 6;
		}else if(strcmp(input,"white") == 0){
			return 7;
		}else{
			printf("Background color is not available\n");
			return 100;
		}
	}

}

void textcolor(int attr, int fg, int bg){
	char command[13];


	/* Command is the control command to the terminal */

	/* textcolor(BRIGHT,BLACK,WHITE) will have characters printed in
	black in white background */
	sprintf(command, "%c[%d;%d;%dm", 0x1B, attr, fg + 30, bg + 40);
	printf("%s", command);
}

//////// CHECKER PATTERN ///////////
//method checker() prints checker board pattern in the terminal
void checker(char c1[],char c2[]){
	int i,j,k;
	for(i = 0;i < 8;i++){
		if(i%2 == 0){
			for(j = 0;j < 8 ; j++){
				for(k = 0;k < 8; k++){
					if(k%2 != 1){
						textcolor(RESET,checkInput(c1),checkInput(c2));
						printf("        ");
					}else{
						textcolor(RESET,checkInput(c2),checkInput(c1));
						printf("        ");
					}
					textcolor(RESET,checkInput(c1),checkInput(c2));
				}
				printf("\n");

			}

		}else{
			for(j = 0;j < 8 ; j++){
				for(k = 0;k < 8; k++){
					if(k%2 != 1){
						textcolor(RESET,checkInput(c2),checkInput(c1));
						printf("        ");
					}else{
						textcolor(RESET,checkInput(c1),checkInput(c2));
						printf("        ");
					}
					textcolor(RESET,checkInput(c1),checkInput(c2));
				}
				printf("\n");

			}

		}
	}
}

//////// DONUT PATTERN ///////////
//method donut() calculates values to draw the figure
void donut(char c1[],char c2[],int input){
//	printf("DONUT!!!\n");
	int i,j,l,m,n,o,k,x;
	if(input != 0){
		if(input >= 1 && input <= 10 ){
			n = 1;
		}else if(input >= 11 && input <= 19 ){
			n = 2;
		}else if(input >= 20 && input <= 33 ){
			n = 3;
		}else if(input >= 34 && input <= 51 ){
			n = 4;
		}else if(input >= 52 && input <= 100 ){
			n = 5;
		}else if(input >= 101 && input <= 200 ){
			n = 7;
		}

///////// COrReCt cOd3 ////////

		int r1,r2,r3,r4,r5;

		for(i = 1;i <= input/2; i++){
			r2 = (int)sqrt(i*(input-i));
			r1 = input/2 - i;
			if(i <= input/4){
				for(j = 1;j <= r1;j++){
					printf("#");
				}
				for(j = 1;j <= r2;j++){
					printf("@");
				}
			}else{

				for(j = 1;j <= r3;j++){
					printf("#");
				}
				for(j = 1;j <= r4;j++){
					printf("@");
				}
				for(j = 1;j <= r5;j++){
					printf("#");
				}
			}

			printf("\n");
		}
	}
}

//////// Method to actually draw the donut in the terminal"line-wise" ////////
void drawDonut(int array[]){
	int j;

	for(j = 1;j <= array[0];j++){
		printf("#");
	}
	for(j = 1;j <= array[1];j++){
		printf("*");
	}
	for(j = 1;j <= array[2];j++){
		printf("#");
	}
	for(j = 1;j <= array[1];j++){
		printf("*");
	}
	for(j = 1;j <= array[0];j++){
		printf("#");
	}
	printf("\n");


}

int main(int argc, char **argv){

	if(argc == 4){
		if(checkType(argv[1])<100){
			if(checkInput(argv[2])<100){
				if(checkInput(argv[3]) < 100){
//					textcolor(RESET,checkInput(argv[2]),checkInput(argv[2]));
					if(checkType(argv[1]) == 1){
						checker(argv[2],argv[3]);
					}else if(checkType(argv[1]) == 2){
						int input;
						scanf("%d",&input);
						donut(argv[2],argv[3],input);
					}
				}
			}
		}
	}else{
		printf("Not enough arguments\n");
	}


//	textcolor(RESET, BLACK, WHITE);
	return 0;
}
